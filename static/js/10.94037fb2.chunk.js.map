{"version":3,"sources":["ui/components/Wallpaper/common/Wallpaper.tsx","ui/components/Wallpaper/StarMap/index.tsx"],"names":["CanvasWallpaper","props","draw","className","pixelated","canvasRef","useDrawingCanvas","classNames","undefined","push","join","ref","OffscreenCanvasWallpaper","initDrawingModule","useOffscreenDrawingCanvas","m","init","StarMap"],"mappings":"sIAAA,wGAOaA,GAPb,MAaK,SAAAC,GAAU,IACLC,EAAuCD,EAAvCC,KAAMC,EAAiCF,EAAjCE,UADF,EACmCF,EAAtBG,iBADb,SAENC,EAAYC,YAAiBJ,GAC7BK,EAAa,CAAC,YAAa,UASjC,YAPkBC,IAAdL,GACFI,EAAWE,KAAKN,GAEdC,GACFG,EAAWE,KAAK,aAGX,4BAAQN,UAAWI,EAAWG,KAAK,KAAMC,IAAKN,MAG1CO,EAMR,SAAAX,GAAU,IACLE,EAA4CF,EAA5CE,UAAWU,EAAiCZ,EAAjCY,kBAAmBT,EAAcH,EAAdG,UAChCC,EAAYS,YAA0BD,GACtCN,EAAa,CAAC,YAAa,SAAU,aAS3C,YAPkBC,IAAdL,GACFI,EAAWE,KAAKN,GAEdC,GACFG,EAAWE,KAAK,aAGX,4BAAQN,UAAWI,EAAWG,KAAK,KAAMC,IAAKN,M,qDC9CvD,mDAGcU,EAHd,wBAGMC,GAAQD,EAAc,8BAAT,kBAAMA,IAEZE,EAAoB,WAC/B,OACE,kBAAC,IAAD,CAA0Bd,UAAU,UAAUU,kBAAmBG,KAItDC","file":"static/js/10.94037fb2.chunk.js","sourcesContent":["import React from 'react'\nimport useDrawingCanvas, { DrawingMethod } from 'react-hooks-use-drawing-canvas'\nimport { useOffscreenDrawingCanvas } from 'react-hooks-use-offscreen-drawing-canvas'\nimport './Wallpaper.css'\n\nexport type CanvasDrawingMethod = DrawingMethod\n\nexport const CanvasWallpaper: React.FC<{\n  /** extra classes for css */\n  className: string\n  draw: CanvasDrawingMethod\n  /** Render the canvas pixelated; without interpolation. Default: false */\n  pixelated?: boolean\n}> = props => {\n  const { draw, className, pixelated = false } = props\n  const canvasRef = useDrawingCanvas(draw)\n  const classNames = ['Wallpaper', 'Canvas']\n\n  if (className !== undefined) {\n    classNames.push(className)\n  }\n  if (pixelated) {\n    classNames.push('pixelated')\n  }\n\n  return <canvas className={classNames.join(' ')} ref={canvasRef} />\n}\n\nexport const OffscreenCanvasWallpaper: React.FC<{\n  /** extra classes for css */\n  className: string\n  initDrawingModule: () => Promise<typeof import('worker-loader!*')>\n  /** Render the canvas pixelated; without interpolation. Default: false */\n  pixelated?: boolean\n}> = props => {\n  const { className, initDrawingModule, pixelated } = props\n  const canvasRef = useOffscreenDrawingCanvas(initDrawingModule)\n  const classNames = ['Wallpaper', 'Canvas', 'Offscreen']\n\n  if (className !== undefined) {\n    classNames.push(className)\n  }\n  if (pixelated) {\n    classNames.push('pixelated')\n  }\n\n  return <canvas className={classNames.join(' ')} ref={canvasRef} />\n}\n","import React from 'react'\nimport { OffscreenCanvasWallpaper } from '../common/Wallpaper'\n\nconst init = (m => () => m)(import('worker-loader!./draw.worker.ts'))\n\nexport const StarMap: React.FC = () => {\n  return (\n    <OffscreenCanvasWallpaper className=\"StarMap\" initDrawingModule={init} />\n  )\n}\n\nexport default StarMap\n"],"sourceRoot":""}