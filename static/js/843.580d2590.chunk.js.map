{"version":3,"file":"static/js/843.580d2590.chunk.js","mappings":"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","sources":["ui/components/Wallpaper/common/random.ts","ui/components/Wallpaper/common/react-hooks-use-drawing-canvas/index.ts","ui/components/Wallpaper/common/Wallpaper.tsx","ui/components/Wallpaper/common/PVector.ts","ui/components/Wallpaper/Dragon/Scale.ts","ui/components/Wallpaper/Dragon/Dragon.ts","ui/components/Wallpaper/Dragon/Slider.ts","ui/components/Wallpaper/Dragon/index.tsx"],"sourcesContent":["/**\n * Returns a random integer between two numbers, or if there is only one number,\n * between zero and that number.\n *\n * @param from The lower bound\n * @param to The upper bound\n */\nexport const randomInt = (from: number, to: number = from) => {\n  if (from === to) from = 0\n  return from + Math.floor(Math.random() * (to - from))\n}\n\n/**\n * Returns a random float in a given range.\n */\nexport const randomRange = (from: number, to: number) => {\n  return from + Math.random() * (to - from)\n}\n\n/** Returns a random normally distributed float */\nexport const randomNormal = (mean = 0, stddev = 1) => {\n  let u = 0\n  let v = 0\n  while (u === 0) u = Math.random()\n  while (v === 0) v = Math.random()\n  const statistic = Math.sqrt(-2 * Math.log(u)) + Math.cos(2 * Math.PI * v)\n  return statistic * stddev + mean\n}\n","import {\n  MutableRefObject,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState\n} from 'react'\n\nexport type DrawingMethod = (\n  /** A 2d context on the referenced canvas */\n  context: CanvasRenderingContext2D,\n  /** Some properties about the canvas that may or may not be critical to the\n   * way the method is used.\n   */\n  props: {\n    /** The width of the context */\n    width: number\n    /** The height of the context */\n    height: number\n    /**\n     * A flag that tells the drawing method about the user's motion preferences.\n     * Perhaps a drawing method that has excessive movement would include a case\n     * for users that prefer reduced motion. Defaults to reduced motion.\n     */\n    prefersReducedMotion: boolean\n  }\n) => void | (() => void)\n\n/**\n * Provides the width and height of a referenced canvas in the dom.\n *\n * ***Note:*** this method assumes the width and height of the canvas will not\n * change unless the window width has changed.\n *\n * @param canvasRef A reference to the canvas element.\n */\nfunction useCanvasSize(\n  canvasRef: MutableRefObject<HTMLCanvasElement | undefined>\n) {\n  const [size, setSize] = useState({ width: 0, height: 0 })\n\n  useEffect(() => {\n    const getSize = () => {\n      if (!canvasRef.current) return\n      const dpr = window.devicePixelRatio\n      const width = canvasRef.current.offsetWidth * dpr\n      const height = canvasRef.current.offsetHeight * dpr\n      setSize({ width, height })\n    }\n    getSize()\n    window.addEventListener('resize', getSize)\n    return () => window.removeEventListener('resize', getSize)\n  }, [canvasRef])\n\n  return size\n}\n\n/**\n * A wrapper that will debounce the drawing method and call the drawing method\n * asynchronously.\n *\n * @param draw A closure that calls the drawing method with the intended props.\n * @param time The time to debounce in milliseconds.\n */\nconst debounceDraw = (\n  draw: () => void | (() => void),\n  time: number\n): (() => void) => {\n  let canceled = false\n  let cleanUp: void | (() => void)\n\n  const timeout = setTimeout(async () => {\n    if (!canceled) {\n      cleanUp = draw()\n    }\n  }, time)\n\n  return () => {\n    // cancel the timeout\n    clearTimeout(timeout)\n    // set the canceled flag\n    canceled = true\n    if (cleanUp) {\n      cleanUp\n    }\n  }\n}\n\n/**\n * Provides an api for getting a 2d context from a canvas element.\n *\n * The returned reference should be assigned to a canvas element. The drawing\n * method will then be called with a context on the referenced canvas.\n *\n * Be careful about defining the drawing method. If it is defined inline, then\n * it will be re-called on every render.\n *\n * ```ts\n * // defines a new drawing function on every render\n * const Component = () => {\n *   const canvasRef = useDrawingCanvas(ctx => ctx.fillRect(0, 0, 10, 10))\n *\n *   return <canvas ref={canvasRef} />\n * }\n *\n * // safer\n * const draw = ctx => ctx.fillRect(0, 0, 10, 10)\n *\n * const Component = () => {\n *   const canvasRef = useDrawingCanvas(draw)\n *\n *   return <canvas ref={canvasRef} />\n * }\n * ```\n *\n * @param draw The drawing method\n */\nexport default function useDrawingCanvas(draw: DrawingMethod) {\n  const ref = useRef<HTMLCanvasElement>()\n  const [context, setContext] = useState<CanvasRenderingContext2D>()\n  const { width, height } = useCanvasSize(ref)\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    setContext(ref.current.getContext('2d') || undefined)\n  }, [ref])\n\n  useLayoutEffect(() => {\n    if (context) {\n      context.canvas.width = width\n      context.canvas.height = height\n\n      return debounceDraw(\n        () =>\n          draw(context, {\n            width,\n            height,\n            prefersReducedMotion: !window.matchMedia(\n              '(prefers-reduced-motion: no-preferece)'\n            ).matches\n          }),\n        50\n      )\n    }\n  }, [draw, context, width, height])\n\n  return ref\n}\n","import React, { MutableRefObject } from 'react'\nimport useDrawingCanvas, {\n  DrawingMethod\n} from './react-hooks-use-drawing-canvas'\nimport './Wallpaper.css'\n\nexport type CanvasDrawingMethod = DrawingMethod\n\nexport const CanvasWallpaper: React.FC<{\n  /** extra classes for css */\n  className: string\n  draw: CanvasDrawingMethod\n  /** Render the canvas pixelated; without interpolation. Default: false */\n  pixelated?: boolean\n}> = props => {\n  const { draw, className, pixelated = false } = props\n  const canvasRef = useDrawingCanvas(draw)\n  const classNames = ['Wallpaper', 'Canvas']\n\n  if (className !== undefined) {\n    classNames.push(className)\n  }\n  if (pixelated) {\n    classNames.push('pixelated')\n  }\n\n  return (\n    <canvas\n      className={classNames.join(' ')}\n      ref={canvasRef as MutableRefObject<HTMLCanvasElement>}\n    />\n  )\n}\n","/**\n * A class that represents a position vector in two dimensional space.\n * @property x The x position\n * @property y The y position\n */\nexport default class PVector {\n  /** The x-position of the vector */\n  readonly x: number\n  /** The y-position of the vector */\n  readonly y: number\n\n  /**\n   * Makes a new PVector.\n   *\n   * @param x The x position\n   * @param y The y position (defaults to be the same as the x position)\n   */\n  constructor(x: number, y: number = x) {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Applies a given action to a list of vectors component-wise.\n   *\n   * For example, to add two vectors, `a` and `b`, componentwise, we could do\n   * ```ts\n   * PVector.componentWise((aComp, bComp) => aComp + bComp, a, b)\n   * ```\n   *\n   * @param action The action to be preformed on each component\n   * @param vectors The vectors whose components will be passed to the action\n   */\n  static componentWise(\n    action: (...components: number[]) => number,\n    ...vectors: PVector[]\n  ) {\n    return new PVector(\n      action(...vectors.map(v => v.x)),\n      action(...vectors.map(v => v.y))\n    )\n  }\n  /**\n   * The same as the static method, but the first vector will be the current\n   * `this`.\n   *\n   * @param action The action to perform on each component\n   * @param extraVectors Any extra vectors to be included in the calculation\n   */\n  componentWise(\n    action: (...components: number[]) => number,\n    ...extraVectors: PVector[]\n  ) {\n    return PVector.componentWise(action, this, ...extraVectors)\n  }\n\n  /**\n   * Adds a list of vectors together component-wise.\n   *\n   * @param vectors The vectors to add\n   */\n  static add(...vectors: PVector[]) {\n    return PVector.componentWise(\n      (...components) => components.reduce((s, v) => s + v, 0),\n      ...vectors\n    )\n  }\n  /**\n   * Adds a list of vectors to the vector component-wise.\n   *\n   * @param vectors The vectors to add\n   */\n  add(...vectors: PVector[]) {\n    return PVector.add(this, ...vectors)\n  }\n\n  /**\n   * Subtracts a list of vectors from a given vector.\n   *\n   * @param from The vector that will be subtracted from\n   * @param vectors The vectors to subtract\n   */\n  static subtract(from: PVector, ...vectors: PVector[]) {\n    return PVector.componentWise(\n      (from, sum) => from - sum,\n      from,\n      PVector.add(...vectors)\n    )\n  }\n  /**\n   * Subtracts a list of vectors from the vector.\n   *\n   * @param vectors The vectors to subtract\n   */\n  subtract(...vectors: PVector[]) {\n    return PVector.subtract(this, ...vectors)\n  }\n\n  /**\n   * Returns the component-wise multiplication of the vectors.\n   *\n   * @param vectors The vectors to multiply\n   */\n  static multiply(...vectors: PVector[]) {\n    return PVector.componentWise(\n      (...components) => components.reduce((p, v) => p * v, 1),\n      ...vectors\n    )\n  }\n  /**\n   * Multiplies the vector by a list of vectors.\n   *\n   * @param vectors The vectors to multiply by\n   */\n  multiply(...vectors: PVector[]) {\n    return PVector.multiply(this, ...vectors)\n  }\n\n  /**\n   * Divides a given vector by a list of other vectors component-wise.\n   *\n   * @param dividend The vector to be divided\n   * @param divisors The vectors to divide by\n   */\n  static divide(dividend: PVector, ...divisors: PVector[]) {\n    return PVector.componentWise(\n      (dividend, divisor) => dividend / divisor,\n      dividend,\n      PVector.multiply(...divisors)\n    )\n  }\n  /**\n   * Divides the vector by a list of other vectors component-wise.\n   *\n   * @param divisors The vectors to divide by\n   */\n  divide(...divisors: PVector[]) {\n    return PVector.divide(this, ...divisors)\n  }\n\n  /** Multiplies a vector by a matrix [a b, c d], and translates by e, f. */\n  static transform(\n    vector: PVector,\n    a: number,\n    b: number,\n    c: number,\n    d: number,\n    e = 0,\n    f = 0\n  ) {\n    return new PVector(\n      vector.x * a + vector.y * c + e,\n      vector.x * b + vector.y * d + f\n    )\n  }\n  /** Multiplies the vector by a matrix [a b, c d], and translates by e, f. */\n  transform(a: number, b: number, c: number, d: number, e = 0, f = 0) {\n    return PVector.transform(this, a, b, c, d, e, f)\n  }\n\n  /** Rotates a vector by an angle. (anticlockwise in radians) */\n  static rotate(vector: PVector, theta: number) {\n    const cos = Math.cos(theta)\n    const sin = Math.sin(theta)\n    return vector.transform(cos, -sin, sin, cos, 0, 0)\n  }\n  /** Rotates the vector by an angle. (anticlockwise in radians) */\n  rotate(theta: number) {\n    return PVector.rotate(this, theta)\n  }\n\n  /** Scales a vector by a factor. */\n  static scale(vector: PVector, sf: number) {\n    return PVector.componentWise(x => sf * x, vector)\n  }\n  /** Scales the vector by a factor. */\n  scale(sf: number) {\n    return PVector.scale(this, sf)\n  }\n\n  /** Gets the modulus of a vector */\n  static modulus(vector: PVector) {\n    return Math.sqrt(vector.x * vector.x + vector.y * vector.y)\n  }\n  /** Gets the modulus of a vector */\n  modulus() {\n    return PVector.modulus(this)\n  }\n\n  /**\n   * PVectors will be compared by their lengths.\n   */\n  valueOf() {\n    return this.modulus()\n  }\n}\n","import PVector from '../common/PVector'\n\nexport default class Scale {\n  start: PVector\n  end: PVector\n\n  next?: Scale\n\n  constructor(start: PVector, end: PVector) {\n    this.start = start\n    this.end = end\n  }\n\n  private mid(o: number) {\n    // cubic bezier\n    const t = (3 * (1 - o) + o) * o * o\n    const theta = (t * Math.PI) / 4\n\n    const cos = Math.cos(theta)\n    const sin = Math.sin(theta)\n    const sf = 1 / (2 * cos)\n\n    return this.start.add(\n      this.end\n        .subtract(this.start)\n        .transform(cos, -sin, sin, cos)\n        .scale(sf)\n    )\n  }\n\n  split() {\n    const temp = this.next\n    this.next = new Scale(this.end, this.mid(1))\n    this.end = this.mid(1)\n    this.next.next = temp\n  }\n\n  join() {\n    if (this.next) {\n      this.end = this.next.start\n      this.next = this.next.next\n    }\n  }\n\n  trace(ctx: CanvasRenderingContext2D, t = 0) {\n    const { start, end } = this\n    const mid = this.mid(t)\n    ctx.moveTo(start.x, start.y)\n    ctx.lineTo(mid.x, mid.y)\n    ctx.lineTo(end.x, end.y)\n  }\n}\n","import Scale from './Scale'\nimport PVector from '../common/PVector'\n\nexport default class Dragon {\n  head: Scale\n  depth = 0\n\n  constructor(x1: number, y1: number, x2: number, y2: number) {\n    this.head = new Scale(new PVector(x1, y1), new PVector(x2, y2))\n  }\n\n  deeper() {\n    this.depth += 1\n    let current: Scale | undefined = this.head\n    while (current) {\n      current.split()\n      current = current.next?.next\n    }\n  }\n\n  shallower() {\n    this.depth -= 1\n    let current: Scale | undefined = this.head\n    while (current) {\n      current.join()\n      current = current.next\n    }\n  }\n\n  trace(ctx: CanvasRenderingContext2D, depth: number) {\n    let diff = Math.floor(depth - this.depth)\n    while (diff-- > 0) this.deeper()\n    while (diff++ < 0) this.shallower()\n\n    const offset = depth - Math.floor(depth)\n\n    let current: Scale | undefined = this.head\n    while (current) {\n      current.trace(ctx, offset)\n      current = current.next\n    }\n  }\n}\n","export default class Slider {\n  value: number\n  change: number\n  min: number\n  max: number\n  onChange?: (isTop: boolean) => void\n\n  constructor(\n    value: number,\n    change: number,\n    min: number,\n    max: number,\n    onChange?: (isTop: boolean) => void\n  ) {\n    this.value = value\n    this.change = change\n    this.min = min\n    this.max = max\n    this.onChange = onChange\n  }\n\n  next() {\n    const isTop = this.value + this.change > this.max\n    const isBottom = this.value + this.change < this.min\n    if (isTop || isBottom) {\n      if (this.onChange) this.onChange(isTop)\n      this.change *= -1\n    }\n    this.value += this.change\n  }\n}\n","import React from 'react'\nimport { CanvasWallpaper, CanvasDrawingMethod } from '../common/Wallpaper'\nimport { randomInt } from '../common/random'\nimport Dragon from './Dragon'\nimport Slider from './Slider'\n\nconst draw: CanvasDrawingMethod = (ctx, { width, height }) => {\n  let portrait = false\n  if (width < height) {\n    const temp = width\n    width = height\n    height = temp\n    ctx.setTransform(0, 1, 1, 0, 0, 0)\n    portrait = true\n  }\n\n  const dragon = new Dragon(0, 0, 0, height / 2)\n  let reverse = false\n\n  const depth = new Slider(2, 0.01, 2, 9, isTop => {\n    if (isTop) return\n    reverse = !reverse\n  })\n\n  let hue = randomInt(0, 360)\n  const translate = width / 5\n  ctx.globalAlpha = 0.5\n\n  let frame: number\n  const drawFrame = () => {\n    frame = requestAnimationFrame(drawFrame)\n    ctx.clearRect(0, 0, width, height)\n    ctx.beginPath()\n\n    ctx.save()\n    if (reverse) ctx.transform(0.8, 0, 0, -0.8, width / 10, (7 * height) / 10)\n    else ctx.transform(0.8, 0, 0, 0.8, width / 10, (3 * height) / 10)\n\n    ctx.save()\n    ctx.translate(translate, 0)\n    ctx.scale(-1, 1)\n    dragon.trace(ctx, depth.value)\n    ctx.save()\n    ctx.translate(0, height / 2)\n    ctx.scale(-1, -1)\n    dragon.trace(ctx, depth.value)\n    ctx.restore()\n    ctx.restore()\n\n    ctx.save()\n    ctx.translate(width - translate, 0)\n    if (portrait) ctx.scale(-1, 1)\n    dragon.trace(ctx, depth.value)\n    ctx.save()\n    ctx.translate(0, height / 2)\n    ctx.scale(-1, -1)\n    dragon.trace(ctx, depth.value)\n    ctx.restore()\n    ctx.restore()\n\n    ctx.restore()\n    ctx.strokeStyle = `hsl(${hue},100%,40%)`\n    hue = (hue + 1) % 360\n    ctx.stroke()\n\n    depth.next()\n  }\n\n  drawFrame()\n  return () => cancelAnimationFrame(frame)\n}\n\nconst DragonCurve: React.FC = () => {\n  return <CanvasWallpaper className=\"Dragon\" draw={draw} />\n}\n\nexport default DragonCurve\n"],"names":["randomInt","from","to","arguments","length","undefined","Math","floor","random","randomRange","useDrawingCanvas","draw","ref","useRef","context","setContext","useState","width","height","canvasRef","size","setSize","useEffect","getSize","current","dpr","window","devicePixelRatio","offsetWidth","offsetHeight","addEventListener","removeEventListener","useCanvasSize","getContext","useLayoutEffect","canvas","debounceDraw","time","cleanUp","canceled","timeout","setTimeout","async","clearTimeout","prefersReducedMotion","matchMedia","matches","CanvasWallpaper","props","className","pixelated","classNames","push","_jsx","join","PVector","constructor","x","y","this","componentWise","action","_len","vectors","Array","_key","map","v","_len2","extraVectors","_key2","add","_len3","_key3","_len4","components","_key4","reduce","s","_len5","_key5","subtract","_len6","_key6","sum","_len7","_key7","multiply","_len8","_key8","_len9","_key9","p","_len0","_key0","divide","dividend","_len1","divisors","_key1","divisor","_len10","_key10","transform","vector","a","b","c","d","e","f","rotate","theta","cos","sin","scale","sf","modulus","sqrt","valueOf","Scale","start","end","next","mid","o","PI","split","temp","trace","ctx","t","moveTo","lineTo","Dragon","x1","y1","x2","y2","head","depth","deeper","_current$next","shallower","diff","offset","Slider","value","change","min","max","onChange","isTop","isBottom","_ref","portrait","setTransform","dragon","reverse","hue","translate","frame","globalAlpha","drawFrame","requestAnimationFrame","clearRect","beginPath","save","restore","strokeStyle","stroke","cancelAnimationFrame","DragonCurve"],"sourceRoot":""}