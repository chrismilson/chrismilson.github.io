{"version":3,"sources":["../node_modules/react-hooks-use-drawing-canvas/lib/index.es.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../../../src/comlink.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/react-hooks-use-offscreen-drawing-canvas/lib/index.es.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/react-hooks-use-canvas-size/lib/index.es.js","../node_modules/regenerator-runtime/runtime.js"],"names":["useDrawingCanvas","draw","ref","useRef","useState","context","setContext","useCanvasSize","width","height","useEffect","current","getContext","useLayoutEffect","canvas","time","canceled","timeout","setTimeout","a","clearTimeout","debounceDraw","prefersReducedMotion","window","matchMedia","matches","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","Parent","args","Class","push","apply","instance","Function","bind","arguments","proxyMarker","Symbol","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","MessageChannel","port1","port2","expose","deserialize","port","start","wrap","Error","isError","message","name","stack","serialized","assign","ep","self","addEventListener","callback","ev","data","returnValue","path","id","type","argumentList","map","fromWireValue","parent","slice","reduce","prop","rawValue","transfer","undefined","Promise","resolve","catch","then","toWireValue","wireValue","transferables","postMessage","removeEventListener","closeEndPoint","endpoint","constructor","isMessagePort","close","target","createProxy","isProxyReleased","proxy","get","_target","throwIfProxyReleased","requestResponseMessage","length","r","set","_thisArg","rawArgumentList","last","processArguments","isReleased","arr","processed","v","Array","concat","transferCache","WeakMap","transfers","iterator","isArray","unsupportedIterableToArray","i","F","s","n","done","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","handler","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","useOffscreenDrawingCanvas","initWorkerModule","canvasRef","sentCanvas","setSentCanvas","useMemo","Worker","default","exposed","setProps","offscreen","transferControlToOffscreen","setCanvas","sendCanvas","module","exports","asyncGeneratorStep","gen","reject","_next","_throw","arg","info","error","_asyncToGenerator","fn","this","size","setSize","getSize","offsetWidth","offsetHeight","runtime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","Context","_invoke","state","method","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode"],"mappings":"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","file":"static/js/0.b4763e54.chunk.js","sourcesContent":["import { useRef, useState, useEffect, useLayoutEffect } from 'react';\nimport useCanvasSize from 'react-hooks-use-canvas-size';\n\n/**\r\n * A wrapper that will debounce the drawing method and call the drawing method\r\n * asynchronously.\r\n *\r\n * @param draw A closure that calls the drawing method with the intended props.\r\n * @param time The time to debounce in milliseconds.\r\n */\r\nconst debounceDraw = (draw, time) => {\r\n    let canceled = false;\r\n    let cleanUp;\r\n    const timeout = setTimeout(async () => {\r\n        if (!canceled) {\r\n            cleanUp = draw();\r\n        }\r\n    }, time);\r\n    return () => {\r\n        // cancel the timeout\r\n        clearTimeout(timeout);\r\n        // set the canceled flag\r\n        canceled = true;\r\n    };\r\n};\r\n/**\r\n * Provides an api for getting a 2d context from a canvas element.\r\n *\r\n * The returned reference should be assigned to a canvas element. The drawing\r\n * method will then be called with a context on the referenced canvas.\r\n *\r\n * Be careful about defining the drawing method. If it is defined inline, then\r\n * it will be re-called on every render.\r\n *\r\n * ```ts\r\n * // defines a new drawing function on every render\r\n * const Component = () => {\r\n *   const canvasRef = useDrawingCanvas(ctx => ctx.fillRect(0, 0, 10, 10))\r\n *\r\n *   return <canvas ref={canvasRef} />\r\n * }\r\n *\r\n * // safer\r\n * const draw = ctx => ctx.fillRect(0, 0, 10, 10)\r\n *\r\n * const Component = () => {\r\n *   const canvasRef = useDrawingCanvas(draw)\r\n *\r\n *   return <canvas ref={canvasRef} />\r\n * }\r\n * ```\r\n *\r\n * @param draw The drawing method\r\n */\r\nfunction useDrawingCanvas(draw) {\r\n    const ref = useRef();\r\n    const [context, setContext] = useState();\r\n    const { width, height } = useCanvasSize(ref);\r\n    useEffect(() => {\r\n        if (!ref.current)\r\n            return;\r\n        setContext(ref.current.getContext('2d'));\r\n    }, [ref]);\r\n    useLayoutEffect(() => {\r\n        if (context) {\r\n            context.canvas.width = width;\r\n            context.canvas.height = height;\r\n            return debounceDraw(() => draw(context, {\r\n                width,\r\n                height,\r\n                prefersReducedMotion: !window.matchMedia('(prefers-reduced-motion: no-preferece)').matches\r\n            }), 50);\r\n        }\r\n    }, [draw, context, width, height]);\r\n    return ref;\r\n}\n\nexport default useDrawingCanvas;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer(obj: any, transfers: Transferable[]) {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { wrap, expose, transfer } from 'comlink';\nimport { useRef, useState, useMemo, useEffect } from 'react';\nimport useCanvasSize from 'react-hooks-use-canvas-size';\n\nfunction useOffscreenDrawingCanvas(initWorkerModule) {\r\n    const canvasRef = useRef(null);\r\n    const [sentCanvas, setSentCanvas] = useState(false);\r\n    const { width, height } = useCanvasSize(canvasRef);\r\n    // We first need to load and wrap the worker-wrapped drawing method.\r\n    const proxy = useMemo(async () => {\r\n        const Worker = (await initWorkerModule()).default;\r\n        return wrap(new Worker());\r\n    }, [initWorkerModule]);\r\n    useEffect(() => {\r\n        proxy.then((exposed) => exposed.setProps({\r\n            width,\r\n            height,\r\n            prefersReducedMotion: !window.matchMedia('(prefers-reduced-motion: no-preferece)').matches\r\n        }));\r\n    }, [proxy, height, width]);\r\n    // Then we need to send the canvas to the worker thread.\r\n    useEffect(() => {\r\n        const sendCanvas = async () => {\r\n            const offscreen = canvasRef.current.transferControlToOffscreen();\r\n            await (await proxy).setCanvas(transfer(offscreen, [offscreen]));\r\n            setSentCanvas(true);\r\n        };\r\n        if (!sentCanvas)\r\n            sendCanvas();\r\n    }, [proxy, sentCanvas]);\r\n    return canvasRef;\r\n}\r\nclass ExposedOffscreenDrawingMethod {\r\n    constructor(draw) {\r\n        this.draw = draw;\r\n        this.ctx = null;\r\n        this.props = {\r\n            width: 300,\r\n            height: 150,\r\n            prefersReducedMotion: true\r\n        };\r\n    }\r\n    cleanupIfNeeded() {\r\n        if (this.cleanup)\r\n            this.cleanup();\r\n    }\r\n    startDrawing() {\r\n        if (!this.ctx)\r\n            return;\r\n        this.ctx.canvas.width = this.props.width;\r\n        this.ctx.canvas.height = this.props.height;\r\n        this.cleanup = this.draw(this.ctx, this.props);\r\n    }\r\n    setCanvas(canvas) {\r\n        this.cleanupIfNeeded();\r\n        this.ctx = canvas.getContext('2d');\r\n        this.startDrawing();\r\n    }\r\n    setProps(props) {\r\n        if (this.cleanup)\r\n            this.cleanup();\r\n        this.props = {\r\n            ...this.props,\r\n            ...props // but overwrite any chaned props\r\n        };\r\n        this.startDrawing();\r\n    }\r\n}\r\n/**\r\n * Wraps a drawing method, so that it can be initialised with an offscreen\r\n * canvas and called with a 2d drawing context.\r\n *\r\n * @param draw The offscreen drawing method\r\n */\r\nfunction exposeOffscreenDrawingMethod(draw) {\r\n    expose(new ExposedOffscreenDrawingMethod(draw));\r\n}\n\nexport { exposeOffscreenDrawingMethod, useOffscreenDrawingCanvas };\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useState, useEffect } from 'react';\n\n/**\r\n * Provides the width and height of a referenced canvas in the dom.\r\n *\r\n * ***Note:*** this method assumes the width and height of the canvas will not\r\n * change unless the window width has changed.\r\n *\r\n * @param canvasRef A reference to the canvas element.\r\n */\r\nfunction useCanvasSize(canvasRef) {\r\n    const [size, setSize] = useState({ width: 0, height: 0 });\r\n    useEffect(() => {\r\n        if (!canvasRef.current)\r\n            return;\r\n        const getSize = () => {\r\n            const width = canvasRef.current.offsetWidth;\r\n            const height = canvasRef.current.offsetHeight;\r\n            setSize({ width, height });\r\n        };\r\n        getSize();\r\n        window.addEventListener('resize', getSize);\r\n        return () => window.removeEventListener('resize', getSize);\r\n    }, [canvasRef]);\r\n    return size;\r\n}\n\nexport default useCanvasSize;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}