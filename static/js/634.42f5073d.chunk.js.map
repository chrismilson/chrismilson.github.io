{"version":3,"file":"static/js/634.42f5073d.chunk.js","mappings":"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","sources":["ui/components/Wallpaper/common/random.ts","ui/components/Wallpaper/common/react-hooks-use-drawing-canvas/index.ts","ui/components/Wallpaper/common/Wallpaper.tsx","ui/components/Wallpaper/BouncyBalls/Ball.ts","ui/components/Wallpaper/BouncyBalls/index.tsx","ui/components/Wallpaper/common/PVector.ts"],"sourcesContent":["/**\n * Returns a random integer between two numbers, or if there is only one number,\n * between zero and that number.\n *\n * @param from The lower bound\n * @param to The upper bound\n */\nexport const randomInt = (from: number, to: number = from) => {\n  if (from === to) from = 0\n  return from + Math.floor(Math.random() * (to - from))\n}\n\n/**\n * Returns a random float in a given range.\n */\nexport const randomRange = (from: number, to: number) => {\n  return from + Math.random() * (to - from)\n}\n\n/** Returns a random normally distributed float */\nexport const randomNormal = (mean = 0, stddev = 1) => {\n  let u = 0\n  let v = 0\n  while (u === 0) u = Math.random()\n  while (v === 0) v = Math.random()\n  const statistic = Math.sqrt(-2 * Math.log(u)) + Math.cos(2 * Math.PI * v)\n  return statistic * stddev + mean\n}\n","import {\n  MutableRefObject,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState\n} from 'react'\n\nexport type DrawingMethod = (\n  /** A 2d context on the referenced canvas */\n  context: CanvasRenderingContext2D,\n  /** Some properties about the canvas that may or may not be critical to the\n   * way the method is used.\n   */\n  props: {\n    /** The width of the context */\n    width: number\n    /** The height of the context */\n    height: number\n    /**\n     * A flag that tells the drawing method about the user's motion preferences.\n     * Perhaps a drawing method that has excessive movement would include a case\n     * for users that prefer reduced motion. Defaults to reduced motion.\n     */\n    prefersReducedMotion: boolean\n  }\n) => void | (() => void)\n\n/**\n * Provides the width and height of a referenced canvas in the dom.\n *\n * ***Note:*** this method assumes the width and height of the canvas will not\n * change unless the window width has changed.\n *\n * @param canvasRef A reference to the canvas element.\n */\nfunction useCanvasSize(\n  canvasRef: MutableRefObject<HTMLCanvasElement | undefined>\n) {\n  const [size, setSize] = useState({ width: 0, height: 0 })\n\n  useEffect(() => {\n    const getSize = () => {\n      if (!canvasRef.current) return\n      const dpr = window.devicePixelRatio\n      const width = canvasRef.current.offsetWidth * dpr\n      const height = canvasRef.current.offsetHeight * dpr\n      setSize({ width, height })\n    }\n    getSize()\n    window.addEventListener('resize', getSize)\n    return () => window.removeEventListener('resize', getSize)\n  }, [canvasRef])\n\n  return size\n}\n\n/**\n * A wrapper that will debounce the drawing method and call the drawing method\n * asynchronously.\n *\n * @param draw A closure that calls the drawing method with the intended props.\n * @param time The time to debounce in milliseconds.\n */\nconst debounceDraw = (\n  draw: () => void | (() => void),\n  time: number\n): (() => void) => {\n  let canceled = false\n  let cleanUp: void | (() => void)\n\n  const timeout = setTimeout(async () => {\n    if (!canceled) {\n      cleanUp = draw()\n    }\n  }, time)\n\n  return () => {\n    // cancel the timeout\n    clearTimeout(timeout)\n    // set the canceled flag\n    canceled = true\n    if (cleanUp) {\n      cleanUp\n    }\n  }\n}\n\n/**\n * Provides an api for getting a 2d context from a canvas element.\n *\n * The returned reference should be assigned to a canvas element. The drawing\n * method will then be called with a context on the referenced canvas.\n *\n * Be careful about defining the drawing method. If it is defined inline, then\n * it will be re-called on every render.\n *\n * ```ts\n * // defines a new drawing function on every render\n * const Component = () => {\n *   const canvasRef = useDrawingCanvas(ctx => ctx.fillRect(0, 0, 10, 10))\n *\n *   return <canvas ref={canvasRef} />\n * }\n *\n * // safer\n * const draw = ctx => ctx.fillRect(0, 0, 10, 10)\n *\n * const Component = () => {\n *   const canvasRef = useDrawingCanvas(draw)\n *\n *   return <canvas ref={canvasRef} />\n * }\n * ```\n *\n * @param draw The drawing method\n */\nexport default function useDrawingCanvas(draw: DrawingMethod) {\n  const ref = useRef<HTMLCanvasElement>()\n  const [context, setContext] = useState<CanvasRenderingContext2D>()\n  const { width, height } = useCanvasSize(ref)\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    setContext(ref.current.getContext('2d') || undefined)\n  }, [ref])\n\n  useLayoutEffect(() => {\n    if (context) {\n      context.canvas.width = width\n      context.canvas.height = height\n\n      return debounceDraw(\n        () =>\n          draw(context, {\n            width,\n            height,\n            prefersReducedMotion: !window.matchMedia(\n              '(prefers-reduced-motion: no-preferece)'\n            ).matches\n          }),\n        50\n      )\n    }\n  }, [draw, context, width, height])\n\n  return ref\n}\n","import React, { MutableRefObject } from 'react'\nimport useDrawingCanvas, {\n  DrawingMethod\n} from './react-hooks-use-drawing-canvas'\nimport './Wallpaper.css'\n\nexport type CanvasDrawingMethod = DrawingMethod\n\nexport const CanvasWallpaper: React.FC<{\n  /** extra classes for css */\n  className: string\n  draw: CanvasDrawingMethod\n  /** Render the canvas pixelated; without interpolation. Default: false */\n  pixelated?: boolean\n}> = props => {\n  const { draw, className, pixelated = false } = props\n  const canvasRef = useDrawingCanvas(draw)\n  const classNames = ['Wallpaper', 'Canvas']\n\n  if (className !== undefined) {\n    classNames.push(className)\n  }\n  if (pixelated) {\n    classNames.push('pixelated')\n  }\n\n  return (\n    <canvas\n      className={classNames.join(' ')}\n      ref={canvasRef as MutableRefObject<HTMLCanvasElement>}\n    />\n  )\n}\n","import PVector from '../common/PVector'\nimport { randomRange, randomInt } from '../common/random'\n\nexport default class Ball {\n  /** The displacement of the ball */\n  private s: PVector\n  /** The velocity of the ball */\n  private v: PVector\n  /** The bottom left corner of the ball's bounding box */\n  private min: PVector\n  /** The top right corner of the ball's bounding box */\n  private max: PVector\n  /** The radius of the ball */\n  private radius: number\n  /** The hue of the ball */\n  private hue: number\n\n  constructor(\n    min: PVector,\n    max: PVector,\n    radius = Math.min(max.x - min.x, max.y - min.y, 20 + Math.random() * 20)\n  ) {\n    this.s = new PVector(\n      randomRange(min.x + radius, max.x - radius),\n      randomRange(min.y + radius, max.y - radius)\n    )\n    this.v = new PVector(1 + Math.random() * 3, 1 + Math.random() * 3).multiply(\n      new PVector(randomInt(2) || -1, randomInt(2) || -1)\n    )\n    this.radius = radius\n    this.min = min\n    this.max = max.add(min.multiply(new PVector(-1)))\n    this.hue = randomInt(360)\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    ctx.save()\n\n    ctx.beginPath()\n    ctx.arc(\n      this.min.x + this.s.x,\n      this.min.y + this.s.y,\n      this.radius,\n      0,\n      2 * Math.PI\n    )\n    ctx.closePath()\n\n    ctx.fillStyle = `hsla(${this.hue}, 100%, 40%, 0.6)`\n    ctx.fill()\n\n    ctx.restore()\n  }\n\n  move() {\n    const hit = PVector.componentWise(\n      (s, v, max) =>\n        Math.abs(Math.floor((s + v - this.radius) / (max - 2 * this.radius))),\n      this.s,\n      this.v,\n      this.max\n    )\n    if (hit.x | hit.y) this.hue = randomInt(360)\n\n    this.s = this.s\n      // apply velocity\n      .add(this.v)\n\n    this.v = this.v\n      // bounce off walls\n      .multiply(new PVector(1).subtract(hit.multiply(new PVector(2))))\n      // lose momentum on any wall hit\n      // .multiply(new PVector(1 - 0.1 * (hit.x + hit.y)))\n      // add gravity\n      .add(new PVector(0, 0.1 * (1 - hit.y)))\n  }\n}\n","import React from 'react'\nimport { CanvasWallpaper, CanvasDrawingMethod } from '../common/Wallpaper'\nimport PVector from '../common/PVector'\nimport Ball from './Ball'\n\nconst draw: CanvasDrawingMethod = (ctx, { width, height }) => {\n  const numBalls = (width * height) / 50000\n  const balls: Ball[] = []\n  for (let i = 0; i < numBalls; i++) {\n    balls.push(new Ball(new PVector(0, 0), new PVector(width, height)))\n  }\n  let frame: number\n\n  const drawFrame = () => {\n    frame = requestAnimationFrame(drawFrame)\n    ctx.clearRect(0, 0, width, height)\n\n    balls.forEach(ball => {\n      ball.draw(ctx)\n      ball.move()\n    })\n  }\n\n  drawFrame()\n  return () => {\n    cancelAnimationFrame(frame)\n  }\n}\n\nconst BouncyBalls: React.FC = () => (\n  <CanvasWallpaper className=\"BouncyBalls\" draw={draw} />\n)\n\nexport default BouncyBalls\n","/**\n * A class that represents a position vector in two dimensional space.\n * @property x The x position\n * @property y The y position\n */\nexport default class PVector {\n  /** The x-position of the vector */\n  readonly x: number\n  /** The y-position of the vector */\n  readonly y: number\n\n  /**\n   * Makes a new PVector.\n   *\n   * @param x The x position\n   * @param y The y position (defaults to be the same as the x position)\n   */\n  constructor(x: number, y: number = x) {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Applies a given action to a list of vectors component-wise.\n   *\n   * For example, to add two vectors, `a` and `b`, componentwise, we could do\n   * ```ts\n   * PVector.componentWise((aComp, bComp) => aComp + bComp, a, b)\n   * ```\n   *\n   * @param action The action to be preformed on each component\n   * @param vectors The vectors whose components will be passed to the action\n   */\n  static componentWise(\n    action: (...components: number[]) => number,\n    ...vectors: PVector[]\n  ) {\n    return new PVector(\n      action(...vectors.map(v => v.x)),\n      action(...vectors.map(v => v.y))\n    )\n  }\n  /**\n   * The same as the static method, but the first vector will be the current\n   * `this`.\n   *\n   * @param action The action to perform on each component\n   * @param extraVectors Any extra vectors to be included in the calculation\n   */\n  componentWise(\n    action: (...components: number[]) => number,\n    ...extraVectors: PVector[]\n  ) {\n    return PVector.componentWise(action, this, ...extraVectors)\n  }\n\n  /**\n   * Adds a list of vectors together component-wise.\n   *\n   * @param vectors The vectors to add\n   */\n  static add(...vectors: PVector[]) {\n    return PVector.componentWise(\n      (...components) => components.reduce((s, v) => s + v, 0),\n      ...vectors\n    )\n  }\n  /**\n   * Adds a list of vectors to the vector component-wise.\n   *\n   * @param vectors The vectors to add\n   */\n  add(...vectors: PVector[]) {\n    return PVector.add(this, ...vectors)\n  }\n\n  /**\n   * Subtracts a list of vectors from a given vector.\n   *\n   * @param from The vector that will be subtracted from\n   * @param vectors The vectors to subtract\n   */\n  static subtract(from: PVector, ...vectors: PVector[]) {\n    return PVector.componentWise(\n      (from, sum) => from - sum,\n      from,\n      PVector.add(...vectors)\n    )\n  }\n  /**\n   * Subtracts a list of vectors from the vector.\n   *\n   * @param vectors The vectors to subtract\n   */\n  subtract(...vectors: PVector[]) {\n    return PVector.subtract(this, ...vectors)\n  }\n\n  /**\n   * Returns the component-wise multiplication of the vectors.\n   *\n   * @param vectors The vectors to multiply\n   */\n  static multiply(...vectors: PVector[]) {\n    return PVector.componentWise(\n      (...components) => components.reduce((p, v) => p * v, 1),\n      ...vectors\n    )\n  }\n  /**\n   * Multiplies the vector by a list of vectors.\n   *\n   * @param vectors The vectors to multiply by\n   */\n  multiply(...vectors: PVector[]) {\n    return PVector.multiply(this, ...vectors)\n  }\n\n  /**\n   * Divides a given vector by a list of other vectors component-wise.\n   *\n   * @param dividend The vector to be divided\n   * @param divisors The vectors to divide by\n   */\n  static divide(dividend: PVector, ...divisors: PVector[]) {\n    return PVector.componentWise(\n      (dividend, divisor) => dividend / divisor,\n      dividend,\n      PVector.multiply(...divisors)\n    )\n  }\n  /**\n   * Divides the vector by a list of other vectors component-wise.\n   *\n   * @param divisors The vectors to divide by\n   */\n  divide(...divisors: PVector[]) {\n    return PVector.divide(this, ...divisors)\n  }\n\n  /** Multiplies a vector by a matrix [a b, c d], and translates by e, f. */\n  static transform(\n    vector: PVector,\n    a: number,\n    b: number,\n    c: number,\n    d: number,\n    e = 0,\n    f = 0\n  ) {\n    return new PVector(\n      vector.x * a + vector.y * c + e,\n      vector.x * b + vector.y * d + f\n    )\n  }\n  /** Multiplies the vector by a matrix [a b, c d], and translates by e, f. */\n  transform(a: number, b: number, c: number, d: number, e = 0, f = 0) {\n    return PVector.transform(this, a, b, c, d, e, f)\n  }\n\n  /** Rotates a vector by an angle. (anticlockwise in radians) */\n  static rotate(vector: PVector, theta: number) {\n    const cos = Math.cos(theta)\n    const sin = Math.sin(theta)\n    return vector.transform(cos, -sin, sin, cos, 0, 0)\n  }\n  /** Rotates the vector by an angle. (anticlockwise in radians) */\n  rotate(theta: number) {\n    return PVector.rotate(this, theta)\n  }\n\n  /** Scales a vector by a factor. */\n  static scale(vector: PVector, sf: number) {\n    return PVector.componentWise(x => sf * x, vector)\n  }\n  /** Scales the vector by a factor. */\n  scale(sf: number) {\n    return PVector.scale(this, sf)\n  }\n\n  /** Gets the modulus of a vector */\n  static modulus(vector: PVector) {\n    return Math.sqrt(vector.x * vector.x + vector.y * vector.y)\n  }\n  /** Gets the modulus of a vector */\n  modulus() {\n    return PVector.modulus(this)\n  }\n\n  /**\n   * PVectors will be compared by their lengths.\n   */\n  valueOf() {\n    return this.modulus()\n  }\n}\n"],"names":["randomInt","from","to","arguments","length","undefined","Math","floor","random","randomRange","useDrawingCanvas","draw","ref","useRef","context","setContext","useState","width","height","canvasRef","size","setSize","useEffect","getSize","current","dpr","window","devicePixelRatio","offsetWidth","offsetHeight","addEventListener","removeEventListener","useCanvasSize","getContext","useLayoutEffect","canvas","debounceDraw","time","cleanUp","canceled","timeout","setTimeout","async","clearTimeout","prefersReducedMotion","matchMedia","matches","CanvasWallpaper","props","className","pixelated","classNames","push","_jsx","join","Ball","constructor","min","max","radius","x","y","s","v","hue","this","PVector","multiply","add","ctx","save","beginPath","arc","PI","closePath","fillStyle","fill","restore","move","hit","componentWise","abs","subtract","_ref","numBalls","balls","i","frame","drawFrame","requestAnimationFrame","clearRect","forEach","ball","cancelAnimationFrame","BouncyBalls","action","_len","vectors","Array","_key","map","_len2","extraVectors","_key2","_len3","_key3","_len4","components","_key4","reduce","_len5","_key5","_len6","_key6","sum","_len7","_key7","_len8","_key8","_len9","_key9","p","_len0","_key0","divide","dividend","_len1","divisors","_key1","divisor","_len10","_key10","transform","vector","a","b","c","d","e","f","rotate","theta","cos","sin","scale","sf","modulus","sqrt","valueOf"],"sourceRoot":""}